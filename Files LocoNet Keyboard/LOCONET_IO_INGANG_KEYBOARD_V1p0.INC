
;***************************************************************************
;* LocoNet In/out module met PIC 18F4620 microcontroller                   *
;* Datum: 04 MEI 2021                   Versie LOCONET INPUT V1.0          *
;*                                                                         *
;* Filenaam: LOCONET_IO_INGANG_INPUT_V1p0.INC                              *
;*                                                                         *
;***************************************************************************


;elke ingang werkt via massadetectie met softwarematige ontstoring en schmitt-trigger  

	#DEFINE C_LAAG 64	;onderste grens waarbij massa detectie wegvalt : teller 255 --> 0  (schmitt-trigger)
	#DEFINE C_HOOG 192	;bovenste grens waarbij massa detectie inkomt teller 0 --> 255  (schmitt-trigger)
	
;	

	
	
;STATUS_M bit0 =1 MASSA DETECTIE   =0 GEEN MASSA DETECTIE
;         bit1 = togle gebruikt bij DIP9-10 = 'OFF' 'ON'


MACRO_INGANG	MACRO INPUT_NR_M, COUNTER_M, STATUS_M, TB_BYTE_M, TB_BIT_M
	
	
	LOCAL M_END, M_SPR_MASSA, M_SEND_DATA, M_SPR1, M_SPR2, M_SPR3, M_SPR4, M_SPR10

;+5V
	BTFSS TB_BYTE_M,TB_BIT_M
	GOTO M_SPR_MASSA

	MOVF COUNTER_M,W			;   als COUNTER = 0 dan doe niets
	BTFSC STATUS,Z
	GOTO M_END
	DECF COUNTER_M,F			;   anders verlaag COUNTER
	MOVF COUNTER_M,W
	XORLW C_LAAG				;   is COUNTER = C_LAAG dan reset STATUS bit0 en send data
	BTFSS STATUS,Z
	GOTO M_END
	BCF STATUS_M,0
	
	BTFSC DIP10
	GOTO M_SEND_DATA
	MOVLW INPUT_NR_M
	XORLW 1
	BTFSS STATUS,Z
	BRA $+2			
	RETURN
	MOVLW INPUT_NR_M
	XORLW 2
	BTFSS STATUS,Z
	BRA M_SEND_DATA
	RETURN
	
;MASSA

M_SPR_MASSA					;indien wel massa 

	INCFSZ COUNTER_M,F			;   verhoog COUNTER tot 255
	BRA M_SPR4
	DECF COUNTER_M
	GOTO M_END
M_SPR4	
	MOVF COUNTER_M,W			;    als COUNTER = C_HOOG dan set STATUS bit0 en send data
	XORLW C_HOOG
	BTFSS STATUS,Z
	GOTO M_END
	BSF STATUS_M,0
	BTG STATUS_M,1
	
;	BTFSC DIP10	    ;ALS GPON OF GPOFF
;	BRA M_SEND_DATA
;	MOVLW INPUT_NR_M
;	XORLW 1
;	BTFSS STATUS,Z
;	BRA M_SPR10
;	MOVLW .2
;	MOVWF AANTAL_BYTES
;	MOVLW OPC_GPON
;	MOVWF TE_VERZENDEN_BYTE1
;	CALL TE_VERZENDEN_BYTES_IN_BUFFER
;	RETURN
	
;M_SPR10	
;	MOVLW INPUT_NR_M
;	XORLW 2
;	BTFSS STATUS,Z
;	BRA M_SEND_DATA
;	MOVLW .2
;	MOVWF AANTAL_BYTES
;	MOVLW OPC_GPOFF
;	MOVWF TE_VERZENDEN_BYTE1
;	CALL TE_VERZENDEN_BYTES_IN_BUFFER
;	RETURN	

M_SEND_DATA	

;is selectie OPC_SW_REQ 


;SW1 = '0,A6,A5,A4,A3,A2,A1,A0'
	
;Als DIP9='ON'
;                     A2,A1,A0' = INPUT_NR_M-1 SHIFT RIGHT
;                  A3         ' = INV DIP11
;anders 	
;      '           A3,A2,A1,A0' = INPUT_NR_M-1
;      '        A4            ' = INV ADDRESS1
;      '     A5               ' = INV ADDRESS2
;      '  A6                  ' = INV ADDRESS3

	
;SW2 = '0,0,DIR,ON,A10,A9,A8,A7'
;      '                     A7' = INV ADDRESS4
;      '                  A8   ' = INV ADDRESS5
;      '               A9      ' = INV ADDRESS6
;      '           A10         ' = INV ADDRESS7
	
;Als DIP9='ON' 
;      '       ON              ' = STATUS_M bit0
;      '    DIR                ' = INPUT_NR_M-1 bit0

;anders 
;      '        ON             ' = STATUS_M bit0
;      '    DIR                ' = STATUS_M bit1
	

M_SPR1   
	
	MOVLW .4
	MOVWF AANTAL_BYTES
	CLRF TE_VERZENDEN_BYTE3
	MOVLW OPC_SW_REQ
	MOVWF TE_VERZENDEN_BYTE1
	
				;DIP9 ='ON' 
	BTFSC DIP9
	GOTO M_SPR3

	BCF STATUS,C
	MOVLW INPUT_NR_M-1
	MOVWF TE_VERZENDEN_BYTE2
	RRCF TE_VERZENDEN_BYTE2,F
	BTFSS DIP11
	BSF TE_VERZENDEN_BYTE2,3
	BTFSS ADDRESS1
	BSF TE_VERZENDEN_BYTE2,4
	BTFSS ADDRESS2
	BSF TE_VERZENDEN_BYTE2,5
	BTFSS ADDRESS3
	BSF TE_VERZENDEN_BYTE2,6
	BTFSS ADDRESS4
	BSF TE_VERZENDEN_BYTE3,0
	BTFSS ADDRESS5
	BSF TE_VERZENDEN_BYTE3,1
	BTFSS ADDRESS6
	BSF TE_VERZENDEN_BYTE3,2
	BTFSS ADDRESS7
	BSF TE_VERZENDEN_BYTE3,3
	BTFSC STATUS_M,0
	BSF TE_VERZENDEN_BYTE3,4
	MOVLW INPUT_NR_M-1
	BTFSS WREG,0
	BSF TE_VERZENDEN_BYTE3,5
	CALL TE_VERZENDEN_BYTES_IN_BUFFER
	
	BTFSS STATUS_M,0
	GOTO M_END
	MOVLW INPUT_NR_M-1
	BTFSC WREG,0
	BRA $+10
	BCF LED5
	MOVLW 12
	MOVWF TEL_LED5
	GOTO M_END
	BCF LED4
	MOVLW 12
	MOVWF TEL_LED4
	GOTO M_END	
	
M_SPR3	
	
	MOVLW INPUT_NR_M-1
	MOVWF TE_VERZENDEN_BYTE2
	BTFSS ADDRESS1
	BSF TE_VERZENDEN_BYTE2,4
	BTFSS ADDRESS2
	BSF TE_VERZENDEN_BYTE2,5
	BTFSS ADDRESS3
	BSF TE_VERZENDEN_BYTE2,6
	BTFSS ADDRESS4
	BSF TE_VERZENDEN_BYTE3,0 
	BTFSS ADDRESS5
	BSF TE_VERZENDEN_BYTE3,1
	BTFSS ADDRESS6
	BSF TE_VERZENDEN_BYTE3,2
	BTFSS ADDRESS7
	BSF TE_VERZENDEN_BYTE3,3
	
	BTFSC STATUS_M,0
	BSF TE_VERZENDEN_BYTE3,4
	BTFSC STATUS_M,1
	BSF TE_VERZENDEN_BYTE3,5
	CALL TE_VERZENDEN_BYTES_IN_BUFFER
	
	MOVLW INPUT_NR_M-1	;opslaan in EEPROM
	MOVWF EEADR
	MOVF STATUS_M,W
	MOVWF EEDATA
	CALL COPY_NAAR_EEPROM
	
	BTFSS STATUS_M,0
	BRA M_END
	BTFSC STATUS_M,1
	BTFSC WREG,0
	BRA $+10
	BCF LED5
	MOVLW 12
	MOVWF TEL_LED5
	GOTO M_END
	BCF LED4
	MOVLW 12
	MOVWF TEL_LED4	
		
M_END
	
    ENDM
	
	
	
TEST_INGANG
    
	
    MACRO_INGANG .1, COUNTER_INPUT1, STATUS_INPUT1, TB1_8, 0
    MACRO_INGANG .2, COUNTER_INPUT2, STATUS_INPUT2, TB1_8, 1
    MACRO_INGANG .3, COUNTER_INPUT3, STATUS_INPUT3, TB1_8, 2
    MACRO_INGANG .4, COUNTER_INPUT4, STATUS_INPUT4, TB1_8, 3
    MACRO_INGANG .5, COUNTER_INPUT5, STATUS_INPUT5, TB1_8, 4
    MACRO_INGANG .6, COUNTER_INPUT6, STATUS_INPUT6, TB1_8, 5
    MACRO_INGANG .7, COUNTER_INPUT7, STATUS_INPUT7, TB1_8, 6
    MACRO_INGANG .8, COUNTER_INPUT8, STATUS_INPUT8, TB1_8, 7
    MACRO_INGANG .9, COUNTER_INPUT9, STATUS_INPUT9, TB9_16, 0
    MACRO_INGANG .10, COUNTER_INPUT10, STATUS_INPUT10, TB9_16, 1
    MACRO_INGANG .11, COUNTER_INPUT11, STATUS_INPUT11, TB9_16, 2
    MACRO_INGANG .12, COUNTER_INPUT12, STATUS_INPUT12, TB9_16, 3
    MACRO_INGANG .13, COUNTER_INPUT13, STATUS_INPUT13, TB9_16, 4
    MACRO_INGANG .14, COUNTER_INPUT14, STATUS_INPUT14, TB9_16, 5
    MACRO_INGANG .15, COUNTER_INPUT15, STATUS_INPUT15, TB9_16, 6
    MACRO_INGANG .16, COUNTER_INPUT16, STATUS_INPUT16, TB9_16, 7

    RETURN
	
	
;*****************************************************************************
	
	#DEFINE LUS1	1
	#DEFINE LUS2	2
	#DEFINE LUS3	3
	#DEFINE LUS4	4
	
INIT_KEYBOARD	

	
	MOVLW b'11110011'   ;herdefinieer poorten
	MOVWF TRISB
	MOVLW b'10001111'
	MOVWF TRISC
	MOVLW b'11111111'
	MOVWF TRISD
	BCF POORT3
	BCF POORT4
	BSF POORT1
	BSF POORT2
	BSF POORT7
	BSF POORT8
	BCF POORT11
	BCF POORT12
	BSF POORT9
	BSF POORT10
	BSF POORT15
	BSF POORT16
	
	CLRF SPRONG 
	BSF SPRONG,LUS1	
	RETURN
	
;***************************************************************************
KEYBOARD

	BTFSC SPRONG,LUS4
	GOTO SPRONG_LUS4
	BTFSC SPRONG,LUS2
	GOTO SPRONG_LUS2
	BTFSC SPRONG,LUS3
	GOTO SPRONG_LUS3	
	
SPRONG_LUS1
	
	BSF POORT8
	BSF POORT16
	BCF POORT3
	BCF POORT4
	BCF POORT11
	BCF POORT12
	BSF TRISD,7
	BSF TRISB,7
	
	BCF SPRONG,LUS1
	BSF SPRONG,LUS2
	
	BTFSC DIP9  ;ALS  DIP9=ON
	GOTO LUS1_SPR1
	
	BTFSC LED1_8,7
	BSF POORT11
	BTFSC LED1_8,6
	BSF POORT12
	BTFSC LED9_16,7
	BSF POORT3
	BTFSC LED9_16,6
	BSF POORT4
	
	GOTO LUS1_SPR2	
	
LUS1_SPR1           ;ALS  DIP9=OFF	
	
	BTFSC LED1_8,3
	BSF POORT11
	BTFSC LED1_8,7
	BSF POORT12
	BTFSC LED9_16,3
	BSF POORT3
	BTFSC LED9_16,7
	BSF POORT4	
	
LUS1_SPR2	
	BCF POORT1
	BCF POORT9
	BCF TRISD,2
	BCF TRISB,0
	
	BTFSC DIP9  ;ALS  DIP9=ON
	GOTO LUS1_SPR3
	
	BCF TB1_8,6
	BCF TB1_8,7
	BCF TB9_16,6
	BCF TB9_16,7
	
	BTFSC POORT14
	BSF TB1_8,7
	BTFSC POORT13
	BSF TB1_8,6
	BTFSC POORT6
	BSF TB9_16,7
	BTFSC POORT5
	BSF TB9_16,6
	
	RETURN
	
LUS1_SPR3
	
	BCF TB1_8,3
	BCF TB1_8,7
	BCF TB9_16,3
	BCF TB9_16,7
	
	BTFSC POORT14
	BSF TB1_8,3
	BTFSC POORT13
	BSF TB1_8,7
	BTFSC POORT6
	BSF TB9_16,3
	BTFSC POORT5
	BSF TB9_16,7	
	
	RETURN

;***************************************************************************	
SPRONG_LUS2
	
	BSF POORT1
	BSF POORT9	
	BCF POORT3
	BCF POORT4
	BCF POORT11
	BCF POORT12
	BSF TRISD,2
	BSF TRISB,0
	
	BCF SPRONG,LUS2
	BSF SPRONG,LUS3
	
	BTFSC DIP9  ;ALS  DIP9=ON
	GOTO LUS2_SPR1	

	BTFSC LED1_8,5
	BSF POORT11
	BTFSC LED1_8,4
	BSF POORT12
	BTFSC LED9_16,5
	BSF POORT3
	BTFSC LED9_16,4
	BSF POORT4
	
	GOTO LUS2_SPR2	
	
LUS2_SPR1           ;ALS  DIP9=OFF	
	
	BTFSC LED1_8,2
	BSF POORT11
	BTFSC LED1_8,6
	BSF POORT12
	BTFSC LED9_16,2
	BSF POORT3
	BTFSC LED9_16,6
	BSF POORT4	
	
LUS2_SPR2	
	BCF POORT2
	BCF POORT10
	BCF TRISD,3
	BCF TRISB,1
	
	BTFSC DIP9  ;ALS  DIP9=ON
	GOTO LUS2_SPR3		
		
	BCF TB1_8,4
	BCF TB1_8,5
	BCF TB9_16,4
	BCF TB9_16,5
	
	BTFSC POORT14
	BSF TB1_8,5
	BTFSC POORT13
	BSF TB1_8,4
	BTFSC POORT6
	BSF TB9_16,5
	BTFSC POORT5
	BSF TB9_16,4
	
	RETURN
	
LUS2_SPR3	
	
	BCF TB1_8,2
	BCF TB1_8,6
	BCF TB9_16,2
	BCF TB9_16,6
	
	BTFSC POORT14
	BSF TB1_8,2
	BTFSC POORT13
	BSF TB1_8,6
	BTFSC POORT6
	BSF TB9_16,2
	BTFSC POORT5
	BSF TB9_16,6
	
	RETURN	
	
;***************************************************************************	
SPRONG_LUS3
	
	BSF POORT2
	BSF POORT10	
	BCF POORT3
	BCF POORT4
	BCF POORT11
	BCF POORT12
	BSF TRISD,3
	BSF TRISB,1
	
	BCF SPRONG,LUS3
	BSF SPRONG,LUS4

	BTFSC DIP9  ;ALS  DIP9=ON
	GOTO LUS3_SPR1
	
	BTFSC LED1_8,3
	BSF POORT11
	BTFSC LED1_8,2
	BSF POORT12
	BTFSC LED9_16,3
	BSF POORT3
	BTFSC LED9_16,2
	BSF POORT4
	
	GOTO LUS3_SPR2	
	
LUS3_SPR1           ;ALS  DIP9=OFF	
	
	BTFSC LED1_8,1
	BSF POORT11
	BTFSC LED1_8,5
	BSF POORT12
	BTFSC LED9_16,1
	BSF POORT3
	BTFSC LED9_16,5
	BSF POORT4
	
LUS3_SPR2	
	BCF POORT7
	BCF POORT15
	BCF TRISD,6
	BCF TRISB,6
	
	BTFSC DIP9  ;ALS  DIP9=ON
	GOTO LUS3_SPR3		
		
	BCF TB1_8,2
	BCF TB1_8,3
	BCF TB9_16,2
	BCF TB9_16,3
	
	BTFSC POORT14
	BSF TB1_8,3
	BTFSC POORT13
	BSF TB1_8,2
	BTFSC POORT6
	BSF TB9_16,3
	BTFSC POORT5
	BSF TB9_16,2
	RETURN
	
LUS3_SPR3
	
	BCF TB1_8,1
	BCF TB1_8,5
	BCF TB9_16,1
	BCF TB9_16,5
	
	BTFSC POORT14
	BSF TB1_8,1
	BTFSC POORT13
	BSF TB1_8,5
	BTFSC POORT6
	BSF TB9_16,1
	BTFSC POORT5
	BSF TB9_16,5	
	
	RETURN	
	
;***************************************************************************	
SPRONG_LUS4

	BSF POORT7
	BSF POORT15	
	BCF POORT3
	BCF POORT4
	BCF POORT11
	BCF POORT12
	BSF TRISD,6
	BSF TRISB,6
	
	BCF SPRONG,LUS4
	BSF SPRONG,LUS1
	
	BTFSC DIP9  ;ALS  DIP9=ON
	GOTO LUS4_SPR1
	
	BTFSC LED1_8,1
	BSF POORT11
	BTFSC LED1_8,0
	BSF POORT12
	BTFSC LED9_16,1
	BSF POORT3
	BTFSC LED9_16,0
	BSF POORT4
	
	GOTO LUS4_SPR2	
	
LUS4_SPR1           ;ALS  DIP9=OFF	
	
	BTFSC LED1_8,0
	BSF POORT11
	BTFSC LED1_8,4
	BSF POORT12
	BTFSC LED9_16,0
	BSF POORT3
	BTFSC LED9_16,4
	BSF POORT4
	
LUS4_SPR2	
	BCF POORT8	
	BCF POORT16
	BCF TRISD,7
	BCF TRISB,7
	
	BTFSC DIP9  ;ALS  DIP9=ON
	GOTO LUS4_SPR3		
		
	BCF TB1_8,0
	BCF TB1_8,1
	BCF TB9_16,0
	BCF TB9_16,1
	
	BTFSC POORT14
	BSF TB1_8,1
	BTFSC POORT13
	BSF TB1_8,0
	BTFSC POORT6
	BSF TB9_16,1
	BTFSC POORT5
	BSF TB9_16,0
	
	RETURN
	
LUS4_SPR3
	
	BCF TB1_8,0
	BCF TB1_8,4
	BCF TB9_16,0
	BCF TB9_16,4
	
	BTFSC POORT14
	BSF TB1_8,0
	BTFSC POORT13
	BSF TB1_8,4
	BTFSC POORT6
	BSF TB9_16,0
	BTFSC POORT5
	BSF TB9_16,4
		
	RETURN	
 